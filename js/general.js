class Tools{constructor(e){this.elem=e}createElement(){return document.createElement(""+this.elem)}renderPage(){const e=this.createElement("div");return e.className="header shadow navbar navbar-expand-lg navbar-light bg-light",e.append(this.renderHeader()),e}renderHeader(){const e=this.createElement();return e.className="container container-fluid container-header",e.append(this.renderHeaderLogo(),buttonLoginElement,buttonCreateElement),e}renderHeaderLogo(){const e=this.createElement();return e.className="header-logo navbar-brand",e}renderMain(){const e=this.createElement();return e.className="main",e.append(this.renderMainFilterContainer(),this.renderMainContainer()),e}renderMainContainer(){const e=this.createElement();return e.className="main-container",e}renderMainFilterContainer(){const e=this.createElement();return e.className="modal-content main-filter__container container mt-5",e}renderFooter(){const e=this.createElement();return e.className="footer",e}}class Buttons extends Tools{constructor({elem:e,className:t,type:n,textContent:a}){super(e),this.className=t,this.type=n,this.textContent=a}render(){return this.btn=this.createElement(),this.btn.className=this.className,this.btn.type=this.type,this.btn.textContent=this.textContent,this.btn}}class Form extends Tools{constructor({elem:e,action:t,name:n,className:a}){super(e),this.name=n,this.action=t,this.className=a}render(){return this.form=this.createElement(),this.form.name=this.name,this.form.className=this.className,this.form.action=this.action,this.form.append(this.renderHeaderForm(),this.renderBodyForm(),this.renderFooterForm()),this.form}renderHeaderForm(){const e=document.createElement("div");return e.className="modal-header",e.append(this.renderHeaderTitleForm(),buttonCloseElement),e}renderHeaderTitleForm(){const e=document.createElement("h5");return e.className="modal-title",e.textContent="Login",e}renderBodyForm(){const e=document.createElement("div");return e.className="modal-body",e}renderFooterForm(){const e=document.createElement("div");return e.className="modal-footer",e.append(buttonSubmitElement),e}}class Modal extends Tools{constructor({elem:e,className:t}){super(e),this.className=t}render(){return this.div=this.createElement(),this.div.className=this.className,this.div.append(this.renderContainerModal()),this.div}renderClear(){return this.div=this.createElement(),this.div.className=this.className,this.div}renderInputGroup(){return this.div=this.createElement(),this.div.className=this.className,this.div}renderContainerModal(){const e=this.createElement("div");return e.className="popup-create-content modal-dialog modal-dialog-centered modal-dialog-scrollable modal-scrollbar",e.append(formElement),e}}class Input extends Tools{constructor({elem:e,name:t,className:n,type:a,placeholder:l}){super(e),this.name=t,this.className=n,this.type=a,this.placeholder=l}render(){return this.input=this.createElement(),this.input.required=!0,this.input.name=this.name,this.input.className=this.className,this.input.type=this.type,this.input.placeholder=this.placeholder,this.input}}class Label extends Tools{constructor({elem:e,name:t,className:n}){super(e),this.className=n,this.name=t}render(){return this.label=this.createElement(),this.label.name=this.name,this.label.className=this.className,this.label}}class TextArea extends Tools{constructor({elem:e,name:t,className:n,maxlength:a,placeholder:l}){super(e),this.name=t,this.className=n,this.maxlength=a,this.placeholder=l}render(){return this.textarea=this.createElement(),this.textarea.required=!0,this.textarea.name=this.name,this.textarea.className=this.className,this.textarea.maxlength=this.maxlength,this.textarea.placeholder=this.placeholder,this.textarea}}class Select extends Tools{constructor({elem:e,className:t,disabled:n}){super(e),this.className=t,this.disabled=n}renderSelectChooseDoctors(){const e=this.createElement();return e.className="col-md-3 choose-doctors form-select mb-3",e.append(this.renderOptionChooseDoctors(),this.renderOptionCardiologist(),this.renderOptionDentist(),this.renderOptionTherapist()),e}renderOptionChooseDoctors(){const e=document.createElement("option");return e.textContent="Выбор доктора",e.selected=!0,e.disabled=this.disabled,e}renderOptionCardiologist(){const e=document.createElement("option");return e.textContent="Кардиолог",e.value="Cardiologist",e}renderOptionDentist(){const e=document.createElement("option");return e.textContent="Стоматолог",e.value="Dentist",e}renderOptionTherapist(){const e=document.createElement("option");return e.textContent="Терапевт",e.value="Therapist",e}renderSelectChooseUrgency(){const e=this.createElement();return e.className="choose-urgency form-select mb-3",e.append(this.renderOptionChooseUrgency(),this.renderOptionRegular(),this.renderOptionPriority(),this.renderOptionUrgent()),e}renderOptionChooseUrgency(){const e=document.createElement("option");return this.disabled?e.textContent="Все":e.textContent="Срочность",e.selected=!0,e.disabled=!0,e}renderOptionRegular(){const e=document.createElement("option");return e.textContent="Обычная",e}renderOptionPriority(){const e=document.createElement("option");return e.textContent="Приоритетная",e}renderOptionUrgent(){const e=document.createElement("option");return e.textContent="Неотложная",e}}class Cards extends Tools{constructor({elem:e,className:t}){super(e),this.className=t}render(){const e=this.createElement();return e.className=this.className,e}renderCardBody(){const e=document.createElement("div");return e.className="card-body col",e}renderCardTitle(){const e=document.createElement("h5");return e.className="card-title",e}renderCardSubtitle(){const e=document.createElement("h6");return e.className="card-subtitle mb-2 text-muted",e}renderCardText(){const e=document.createElement("p");return e.className="card-text",e}}class Visit{constructor(){}render(){return modalBodyElement.append(labelTargetElement,labelDescriptionElement,labelFullNameElement,labelDescriptionElement,chooseUrgencyElement),modalFooterElement.append(buttonPostElement),labelTargetElement.append(inputTargetElement),labelDescriptionElement.append(inputDescriptionElement),labelFullNameElement.append(inputFullNameElement),modalBodyElement}}class VisitCardiologist extends Visit{constructor(){super()}render(){return modalBodyElement.append(labelPressureElement,labelWeightElement,labelAgeElement,labelTextAreaElement),labelPressureElement.append(inputPressureElement),labelTextAreaElement.append(textAreaElement),labelWeightElement.append(inputWeightElement),labelAgeElement.append(inputAgeElement),modalBodyElement}}class VisitDentist extends Visit{constructor(){super()}render(){return modalBodyElement.append(labelLastVisitElement),labelLastVisitElement.append(inputLastVisitElement),modalBodyElement}}class VisitTherapist extends Visit{constructor(){super()}render(){return modalBodyElement.append(labelAgeElement),labelAgeElement.append(inputAgeElement),modalBodyElement}}class Alert extends Tools{constructor({elem:e,text:t}){super(e),this.text=t}render(){return this.alert=this.createElement(),this.alert.className="toast",this.alert.setAttribute("aria-live","assertive"),this.alert.setAttribute("aria-atomic","true"),this.alert.setAttribute("data-bs-autohide","false"),this.alert.append(this.renderHeader(),this.renderBody()),this.alert}renderContainer(){const e=document.createElement("div");e.setAttribute("aria-live","polite"),e.setAttribute("aria-atomic","true"),e.setAttribute("style","position: relative; min-height: 200px;");const t=document.createElement("div");return t.setAttribute("style","position: absolute; top: 80px; right: 20px;"),t.append(this.render()),t}renderHeader(){const e=document.createElement("div");return e.className="toast-header",e.append(this.renderHeaderLogo(),this.renderHeaderTitle(),this.renderHeaderButton()),e}renderHeaderLogo(){const e=document.createElement("img");return e.className="rounded me-2",e}renderHeaderTitle(){const e=document.createElement("strong");return e.className="me-auto",e.textContent="Уведомление",e}renderHeaderButton(){const e=document.createElement("button");return e.className="btn-close btn-alert",e.setAttribute("type","button"),e.setAttribute("data-bs-dismiss","toast"),e.setAttribute("aria-label","Close"),e}renderBody(){const e=document.createElement("div");return e.className="toast-body",e.textContent=this.text,e}}const buttonLoginClass=new Buttons({elem:"button",className:"header-button btn btn-primary",type:"button",textContent:"LOGIN"}),buttonSubmitClass=new Buttons({elem:"button",className:"btn btn-submit btn-primary",type:"submit",textContent:"Submit"}),buttonCloseClass=new Buttons({elem:"button",className:"btn-close close-modal",type:"button"}),buttonCreateClass=new Buttons({elem:"button",className:"btn btn-create btn-primary",type:"button",textContent:"CreateVisit"}),buttonPostClass=new Buttons({elem:"button",className:"btn btn-post btn-primary",type:"submit",textContent:"Создать Визит"}),buttonShowMoreClass=new Buttons({elem:"button",className:"btn btn-primary mb-1",type:"button",textContent:"Show More"}),buttonHideInfoClass=new Buttons({elem:"button",className:"btn btn-hide-info hide btn-primary",type:"button",textContent:"Hide"}),buttonEditClass=new Buttons({elem:"button",className:"btn btn-light mb-2",type:"button",textContent:"Edit"}),buttonDeleteClass=new Buttons({elem:"button",className:"btn btn-danger mb2",type:"button",textContent:"Delete"}),buttonEditCardClass=new Buttons({elem:"button",className:"btn btn-primary mb-2",type:"button",textContent:"Save"}),buttonLoginElement=buttonLoginClass.render(),buttonSubmitElement=buttonSubmitClass.render(),buttonCloseElement=buttonCloseClass.render(),buttonCreateElement=buttonCreateClass.render(),buttonPostElement=buttonPostClass.render(),buttonShowMoreElement=buttonShowMoreClass.render(),buttonEditElement=buttonEditClass.render(),buttonHideInfoElement=buttonHideInfoClass.render(),buttonDeleteElement=buttonDeleteClass.render(),buttonEditCardElement=buttonEditCardClass.render(),fromClass=new Form({action:"#",name:"from",className:"popup-form modal-content",elem:"form"}),formElement=fromClass.render(),modalWindowClass=new Modal({elem:"div",className:"background-popup modal"}),filterWindowClass=new Modal({elem:"div",className:"card-body"}),inputGroupClass=new Modal({elem:"div",className:"input-group mb-3"}),inputGroupElement=inputGroupClass.renderInputGroup(),filterWindowElement=filterWindowClass.renderClear(),modalWindowElement=modalWindowClass.render();document.body.prepend(modalWindowElement);const labelLoginClass=new Label({elem:"label",name:"login-authorization",className:"login-authorization input-group mb-3"}),labelPasswordClass=new Label({elem:"label",name:"login-authorization",className:"password-authorization input-group mb-3"}),labelAgeClass=new Label({elem:"label",name:"label-age",className:"label-age input-group mb-3"}),labelTargetClass=new Label({elem:"label",name:"visit-target",className:"visit-target input-group mb-3"}),labelDescriptionClass=new Label({elem:"label",name:"description",className:"description input-group mb-3"}),labelFullNameClass=new Label({elem:"label",name:"full-name",className:"full-name input-group mb-3"}),labelTextAreaClass=new Label({elem:"label",name:"label-textarea",className:"label-textarea input-group mb-3"}),labelPressureClass=new Label({elem:"label",name:"label-pressure",className:"label-pressure input-group mb-3"}),labelWeightClass=new Label({elem:"label",name:"label-weight",className:"label-weight input-group mb-3"}),labelLastVisitClass=new Label({name:"label-date",elem:"label",className:"label-date input-group mb-3"}),labelLoginElement=labelLoginClass.render(),labelPasswordElement=labelPasswordClass.render(),labelAgeElement=labelAgeClass.render(),labelTargetElement=labelTargetClass.render(),labelDescriptionElement=labelDescriptionClass.render(),labelFullNameElement=labelFullNameClass.render(),labelTextAreaElement=labelTextAreaClass.render(),labelPressureElement=labelPressureClass.render(),labelWeightElement=labelWeightClass.render(),labelLastVisitElement=labelLastVisitClass.render();document.querySelector(".modal-body").append(labelLoginElement),document.querySelector(".modal-body").append(labelPasswordElement);const inputLoginClass=new Input({name:"login",className:"input-login form-control",type:"email",placeholder:"Your email",elem:"input"}),inputPasswordClass=new Input({name:"passoword",className:"input-password form-control",type:"password",placeholder:"Your password",elem:"input"}),inputTargetClass=new Input({name:"visit-target",className:"visit__target form-control",type:"text",placeholder:"Цель визита",elem:"input"}),inputDescriptionClass=new Input({name:"Description",className:"input_description form-control",type:"text",placeholder:"Краткое описание визита",elem:"input"}),inputFullNameClass=new Input({name:"fullName",className:"input-fullName form-control",type:"text",placeholder:"ФИО",elem:"input"}),inputAgeClass=new Input({name:"age",className:"input-age form-control",type:"text",placeholder:"Ваш возраст",elem:"input"}),inputPressureClass=new Input({name:"pressure",className:"input-pressure form-control",type:"text",placeholder:"Обычное давление",elem:"input"}),inputWeightClass=new Input({name:"weight",className:"input-weight form-control",type:"text",placeholder:"Индекс массы тела",elem:"input"}),inputLastVisitClass=new Input({name:"date",className:"input-date form-control",type:"text",placeholder:"Дата последнего визита",elem:"input"}),inputLoginElement=inputLoginClass.render(),inputPasswordElement=inputPasswordClass.render(),inputTargetElement=inputTargetClass.render(),inputDescriptionElement=inputDescriptionClass.render(),inputFullNameElement=inputFullNameClass.render(),inputAgeElement=inputAgeClass.render(),inputPressureElement=inputPressureClass.render(),inputWeightElement=inputWeightClass.render(),inputLastVisitElement=inputLastVisitClass.render();labelLoginElement.append(inputLoginElement),labelPasswordElement.append(inputPasswordElement);const textAreaClass=new TextArea({name:"textarea",className:"modal-textarea form-control",textarea:"150",placeholder:"Перенесенные заболевания сердечно-сосудистой системы",elem:"textarea"}),textAreaElement=textAreaClass.render(),chooseDoctorsClass=new Select({elem:"select"}),chooseUrgencyClass=new Select({elem:"select"}),chooseUrgencyFilterClass=new Select({elem:"select",className:"select-filter__urgency",disabled:!0}),chooseUrgencyElement=chooseUrgencyClass.renderSelectChooseUrgency(),chooseDoctorsElement=chooseDoctorsClass.renderSelectChooseDoctors(),chooseUrgencyFilterElement=chooseUrgencyFilterClass.renderSelectChooseUrgency(),visitClass=new Visit,visitCardiologistClass=new VisitCardiologist,visitDentistClass=new VisitDentist,visitTherapistClass=new VisitTherapist,wrapperClass=new Tools("div");document.body.append(wrapperClass.renderPage()),document.body.append(wrapperClass.renderMain()),document.body.append(wrapperClass.renderFooter());const cardClass=new Cards({elem:"div",className:"card m-3 shadow"}),cardElement=cardClass.render(),AlertCreateClass=new Alert({elem:"div",text:"Операция успешна"}),AlertCreateElement_Close=AlertCreateClass.renderHeaderButton(),AlertCreateElement_Active=AlertCreateClass.render(),AlertCreateElement=AlertCreateClass.renderContainer(),AlertCreateElement_Text=AlertCreateClass.renderBody();function alert(){document.querySelector(".toast:not(.showing):not(.show)").style.transition="1s",document.querySelector(".toast:not(.showing):not(.show)").style.opacity="1",setTimeout(()=>{document.querySelector(".toast:not(.showing):not(.show)").style.opacity="0"},2e3)}document.body.append(AlertCreateElement);const header=document.querySelector(".header"),headerLogo=document.querySelector(".header-logo"),logo=document.createElement("a");logo.innerHTML="The Care Clinic",logo.style.cursor=" pointer",headerLogo.append(logo),buttonCreateElement.style.display="none",buttonLoginElement.onclick=()=>{document.body.style.background="rgba(0, 0, 0, 0.4)",document.querySelector(".background-popup").classList.add("popup__active"),buttonLoginElement.style.display="none",buttonCreateElement.style.display="none"},buttonCreateElement.onclick=e=>{chooseDoctorsElement.disabled=!1,document.querySelector(".background-popup").classList.add("popup__active"),modalBodyElement.innerHTML="",modalBodyElement.append(chooseDoctorsElement),modalTitleElement.textContent="Choose Doctors",buttonSubmitElement.remove(),modalHeaderElement.append(buttonCloseElement)},document.addEventListener("click",e=>{e.target===modalGeneralElement&&(modalGeneralElement.classList.remove("popup__active"),modalBodyElement.textContent="",modalFooterElement.textContent="",chooseDoctorsElement.value="Выбор доктора")});const modalBodyElement=document.querySelector(".modal-body"),modalTitleElement=document.querySelector(".modal-title"),modalHeaderElement=document.querySelector(".modal-header"),modalFooterElement=document.querySelector(".modal-footer"),modalGeneralElement=document.querySelector(".background-popup");let formInputElements=document.getElementsByTagName("input");function createPost(e){fetch("https://ajax.test-danit.com/api/v2/cards",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(e)}).then(e=>{if(200===e.status)return main.textContent="",getCard(),e.text()}).then(e=>console.log(e))}buttonCloseElement.onclick=e=>{e.preventDefault(),modalWindowElement.remove(),document.body.append(modalWindowElement),modalFooterElement.innerHTML="",modalBodyElement.innerHTML="",modalGeneralElement.classList.remove("popup__active"),document.body.style.background="",chooseDoctorsElement.value="Выбор доктора","noid"!==localStorage.getItem("token")&&localStorage.getItem("token")?buttonCreateElement.style.display="block":buttonLoginElement.style.display="block"},chooseDoctorsElement.onchange=e=>{modalBodyElement.textContent="",modalBodyElement.append(chooseDoctorsElement),visitClass.render(),"Cardiologist"==chooseDoctorsElement.value&&"Выбор доктора"!==chooseDoctorsElement.value?visitCardiologistClass.render():"Dentist"==chooseDoctorsElement.value&&"Выбор доктора"!==chooseDoctorsElement.value?visitDentistClass.render():"Therapist"==chooseDoctorsElement.value&&"Выбор доктора"!==chooseDoctorsElement.value&&visitTherapistClass.render(),formInputElements=Array.prototype.slice.call(formInputElements),formInputElements.forEach(e=>{e.value=""})},buttonSubmitElement.onclick=()=>{fetch("https://ajax.test-danit.com/api/v2/cards/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:inputLoginElement.value,password:inputPasswordElement.value})}).then(e=>(console.log(e.status),401==e.status?(alert("Incorrect Login or Password"),"noid"):200==e.status?(buttonLoginElement.style.display="none",buttonCreateElement.style.display="block",document.querySelector(".background-popup").classList.remove("popup__active"),location.reload(),e.text()):void 0)).then(e=>{void 0!==e&&localStorage.setItem("token",e)})},buttonPostElement.onclick=e=>{for(let e=0;e<formInputElements.length;e++){if(!formInputElements[e].validity.valid)return"invalid"}"Dentist"===chooseDoctorsElement.value?createPost({doctor:"Стоматолог",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,lastVisit:inputLastVisitElement.value,fullName:inputFullNameElement.value}):"Cardiologist"===chooseDoctorsElement.value?createPost({doctor:"Кардиолог",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,fullName:inputFullNameElement.value,pressure:inputPressureElement.value,IndexBodyMass:inputWeightElement.value,cardioVascular:textAreaElement.value,age:inputAgeElement.value}):"Therapist"===chooseDoctorsElement.value&&createPost({doctor:"Терапевт",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,age:inputAgeElement.value,fullName:inputFullNameElement.value}),modalBodyElement.innerHTML="",modalFooterElement.innerHTML="",modalGeneralElement.classList.remove("popup__active"),chooseDoctorsElement.value="Выбор доктора"};const main=document.querySelector(".main-container"),FilterContainerElement=document.querySelector(".main-filter__container");function getCard(){main.textContent="",fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{"Content-Type":"application/json; charset=utf-8",Authorization:"Bearer "+localStorage.getItem("token")}}).then(e=>e.json()).then(e=>{main.className="main-cards",0===e.length?(FilterContainerElement.classList.add("hide"),main.insertAdjacentHTML("afterbegin",'<figure class="text-center position-absolute top-50 start-50 translate-middle">\n            <h1 class="display-1">No items have been added</h1>\n          </figure>\t')):(FilterContainerElement.classList.remove("hide"),e.forEach((e,t)=>{const{id:n="",doctor:a="",purpose:l="",description:s="",urgency:o="",fullName:r="",pressure:i="",IndexBodyMass:m="",cardioVascular:c="",age:d="",lastVisit:u=""}=e;let p=[l,s,o,i,m,c,d,u];const h=cardClass.render(),E=cardClass.renderCardBody(),b=cardClass.renderCardTitle(),C=cardClass.renderCardSubtitle();b.textContent=a,C.textContent=r;const g=cardClass.renderCardBody();E.append(b,C,g),g.className="card-body-content hide";const y=cardClass.renderCardBody();y.className="modal-footer";const v=buttonEditClass.render(),N=buttonShowMoreClass.render(),x=buttonHideInfoClass.render();function f(e){fetch("https://ajax.test-danit.com/api/v2/cards/"+n,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(e)}).then(e=>{if(200===e.status)return getCard(),e.text()}).then(e=>console.log(e))}main.append(h),h.append(E,y),y.append(N,x,v),N.onclick=e=>{p.forEach((e,t)=>{g.style.display="block";const n=cardClass.renderCardText();n.textContent=e,g.append(n),N.classList.add("hide"),x.classList.remove("hide"),x.onclick=e=>{g.textContent="",x.classList.add("hide"),N.classList.remove("hide")}})},v.onclick=e=>{document.querySelector(".background-popup").classList.add("popup__active"),modalTitleElement.textContent="Choose an action",modalBodyElement.textContent="",modalBodyElement.append(chooseDoctorsElement),visitClass.render(),chooseDoctorsElement.disabled=!0,modalFooterElement.innerHTML="",modalFooterElement.append(buttonDeleteElement,buttonEditCardElement),"Кардиолог"==b.textContent?(visitCardiologistClass.render(),chooseDoctorsElement.value="Cardiologist",inputFullNameElement.value=r,inputTargetElement.value=l,inputDescriptionElement.value=s,chooseUrgencyElement.value=o,inputPressureElement.value=i,inputWeightElement.value=m,textAreaElement.value=c,inputAgeElement.value=d):"Стоматолог"===b.textContent?(visitDentistClass.render(),chooseDoctorsElement.value="Dentist",inputFullNameElement.value=r,inputTargetElement.value=l,inputDescriptionElement.value=s,chooseUrgencyElement.value=o,inputLastVisitElement.value=u):"Терапевт"===b.textContent&&(visitTherapistClass.render(),chooseDoctorsElement.value="Therapist",chooseDoctorsElement.disabled,inputFullNameElement.value=r,inputTargetElement.value=l,inputDescriptionElement.value=s,chooseUrgencyElement.value=o,inputAgeElement.value=d)},buttonDeleteElement.onclick=e=>{fetch("https://ajax.test-danit.com/api/v2/cards/"+n,{method:"DELETE",headers:{Authorization:"Bearer "+localStorage.getItem("token")}}).then(e=>{console.log(e.status),200==e.status&&(main.textContent="",getCard(),alert())}),document.querySelector(".background-popup").classList.remove("popup__active"),modalFooterElement.innerHTML="",chooseDoctorsElement.value="Выбор доктора"},buttonEditCardElement.onclick=e=>{e.preventDefault(),document.querySelector(".background-popup").classList.remove("popup__active"),"Dentist"===chooseDoctorsElement.value?f({doctor:"Стоматолог",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,lastVisit:inputLastVisitElement.value,fullName:inputFullNameElement.value}):"Cardiologist"===chooseDoctorsElement.value?f({doctor:"Кардиолог",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,fullName:inputFullNameElement.value,pressure:inputPressureElement.value,IndexBodyMass:inputWeightElement.value,cardioVascular:textAreaElement.value,age:inputAgeElement.value}):"Therapist"===chooseDoctorsElement.value&&f({doctor:"Терапевт",purpose:inputTargetElement.value,description:inputDescriptionElement.value,urgency:chooseUrgencyElement.value,age:inputAgeElement.value,fullName:inputFullNameElement.value})}}))})}getCard();class Filter extends Tools{constructor({elem:e,className:t}){super(e),this.className=t}renderInputFilter(){const e=document.createElement("input");return e.name="search",e.className="input-search form-control",e.type="text",e.placeholder="Введите ФИО",e.setAttribute("aria-describedby","basic-addon1"),e}renderLabelFilter(){const e=document.createElement("div");e.className="col-md-4 input-group mb-3",e.name="label-filter";const t=document.createElement("span");return t.textContent="Поиск",t.className="input-group-text",t.id="basic-addon1",e.append(t,this.renderInputFilter()),e}render(){const e=this.createElement();return e.className=this.className,document.querySelector(".main-filter__container").append(e),e.append(this.renderLabelFilter(),chooseUrgencyFilterElement),e}}const filterContainerClass=new Filter({elem:"div",className:"filter-container input-group mt-3"}),filterContainerElement=filterContainerClass.render(),inputFilterElement=document.querySelector(".input-search");inputFilterElement.oninput=function(){let e=this.value.trim().toLowerCase();""!=e?fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{"Content-Type":"application/json; charset=utf-8",Authorization:"Bearer "+localStorage.getItem("token")}}).then(e=>e.json()).then(t=>{t.forEach((t,n)=>{let a=document.querySelectorAll(".card");const{fullName:l}=t;[l.toLowerCase().indexOf(e)]>-1?(main.textContent="",a[n].classList.remove("hide")):(a[n].classList.add("hide"),main.textContent="По вашему запросу ничего не найдено")})}):getCard()};for(let e=0;e<chooseUrgencyFilterElement.length;e++){chooseUrgencyFilterElement[e].disabled=!1}chooseUrgencyFilterElement.onchange=function(){let e=this.value;"Срочность"!=e?fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{"Content-Type":"application/json; charset=utf-8",Authorization:"Bearer "+localStorage.getItem("token")}}).then(e=>e.json()).then(t=>{t.forEach((t,n)=>{let a=document.querySelectorAll(".card");const{urgency:l}=t;[l.search(e)]>-1?a[n].classList.remove("hide"):a[n].classList.add("hide")})}):getCard()},"noid"!==localStorage.getItem("token")&&localStorage.getItem("token")?(buttonLoginElement.style.display="none",buttonCreateElement.style.display="block"):(buttonLoginElement.style.display="block",FilterContainerElement.classList.add("hide"));